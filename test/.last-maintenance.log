[1;37m[ [1;32mINFO [1;37m] [0;32m2018-06-23 10:21:48 UTC[0;97m: Maintenance begun: test/docker-compose.yml[0m
[1;37m[ [1;32mINFO [1;37m] [0;32m2018-06-23 10:21:48 UTC[0;97m @[0;92m/home/cav94mat/Scrivania/docker-maintenance/test[0;97m: Pulling images...[0m
--parallel option is deprecated and will be removed in future versions.
Pulling hello       ... 
Pulling hello-build ... 
404 Client Error: Not Found ("b"pull access denied for cav94mat/hello, repository does not exist or may require 'docker login'"")
[1A[2KPulling hello-build ... [32mdone[0m[1B[2A[2KPulling hello       ... [32mdone[0m[2B[1;37m[ [1;32mINFO [1;37m] [0;32m2018-06-23 10:21:55 UTC[0;97m @[0;92m/home/cav94mat/Scrivania/docker-maintenance/test[0;97m: Re-building local images...[0m
hello uses an image, skipping
Building hello-build
Step 1/2 : FROM hello-world
latest: Pulling from library/hello-world
Digest: sha256:f5233545e43561214ca4891fd1157e1c3c563316ed8e237750d59bde73361e77
Status: Image is up to date for hello-world:latest
 ---> e38bc07ac18e
Step 2/2 : ADD ./Dockerfile /Dockerfile
 ---> 9fcf6c662b65
Successfully built 9fcf6c662b65
Successfully tagged cav94mat/hello:latest
[1;37m[ [1;32mINFO [1;37m] [0;32m2018-06-23 10:22:06 UTC[0;97m @[0;92m/home/cav94mat/Scrivania/docker-maintenance/test[0;97m: Stopping active containers...[0m
hello uses an image, skipping
Building hello-build
Step 1/2 : FROM hello-world
latest: Pulling from library/hello-world
Digest: sha256:f5233545e43561214ca4891fd1157e1c3c563316ed8e237750d59bde73361e77
Status: Image is up to date for hello-world:latest
 ---> e38bc07ac18e
Step 2/2 : ADD ./Dockerfile /Dockerfile
 ---> fa5e7a0b1bad
Successfully built fa5e7a0b1bad
Successfully tagged cav94mat/hello:latest
[1;37m[ [1;32mINFO [1;37m] [0;32m2018-06-23 10:22:09 UTC[0;97m @[0;92m/home/cav94mat/Scrivania/docker-maintenance/test[0;97m: Re-creating containers (if required)...[0m
Creating network "test_default" with the default driver
Creating test_hello_1 ... 
Creating test_hello-build_1 ... 
[2A[2KCreating test_hello_1       ... [32mdone[0m[2B[1A[2KCreating test_hello-build_1 ... [32mdone[0m[1BAttaching to test_hello_1, test_hello-build_1
[36mhello_1        |[0m 
[36mhello_1        |[0m Hello from Docker!
[36mhello_1        |[0m This message shows that your installation appears to be working correctly.
[36mhello_1        |[0m 
[36mhello_1        |[0m To generate this message, Docker took the following steps:
[36mhello_1        |[0m  1. The Docker client contacted the Docker daemon.
[36mhello_1        |[0m  2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
[36mhello_1        |[0m     (amd64)
[36mhello_1        |[0m  3. The Docker daemon created a new container from that image which runs the
[36mhello_1        |[0m     executable that produces the output you are currently reading.
[36mhello_1        |[0m  4. The Docker daemon streamed that output to the Docker client, which sent it
[36mhello_1        |[0m     to your terminal.
[36mhello_1        |[0m 
[36mhello_1        |[0m To try something more ambitious, you can run an Ubuntu container with:
[36mhello_1        |[0m  $ docker run -it ubuntu bash
[36mhello_1        |[0m 
[36mhello_1        |[0m Share images, automate workflows, and more with a free Docker ID:
[36mhello_1        |[0m  https://hub.docker.com/
[36mhello_1        |[0m 
[36mhello_1        |[0m For more examples and ideas, visit:
[36mhello_1        |[0m  https://docs.docker.com/engine/userguide/
[36mhello_1        |[0m 
[33mhello-build_1  |[0m 
[33mhello-build_1  |[0m Hello from Docker!
[33mhello-build_1  |[0m This message shows that your installation appears to be working correctly.
[33mhello-build_1  |[0m 
[33mhello-build_1  |[0m To generate this message, Docker took the following steps:
[33mhello-build_1  |[0m  1. The Docker client contacted the Docker daemon.
[33mhello-build_1  |[0m  2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
[33mhello-build_1  |[0m     (amd64)
[33mhello-build_1  |[0m  3. The Docker daemon created a new container from that image which runs the
[33mhello-build_1  |[0m     executable that produces the output you are currently reading.
[33mhello-build_1  |[0m  4. The Docker daemon streamed that output to the Docker client, which sent it
[33mhello-build_1  |[0m     to your terminal.
[33mhello-build_1  |[0m 
[33mhello-build_1  |[0m To try something more ambitious, you can run an Ubuntu container with:
[33mhello-build_1  |[0m  $ docker run -it ubuntu bash
[33mhello-build_1  |[0m 
[33mhello-build_1  |[0m Share images, automate workflows, and more with a free Docker ID:
[33mhello-build_1  |[0m  https://hub.docker.com/
[33mhello-build_1  |[0m 
[33mhello-build_1  |[0m For more examples and ideas, visit:
[33mhello-build_1  |[0m  https://docs.docker.com/engine/userguide/
[33mhello-build_1  |[0m 
[36mtest_hello_1 exited with code 0
[0m[33mtest_hello-build_1 exited with code 0
[0m